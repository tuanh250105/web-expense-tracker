package com.expensemanager.controller;

import com.expensemanager.model.Category;
import com.expensemanager.model.User;
import com.expensemanager.service.CategoryService;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

@WebServlet("/categories")
public class CategoryController extends HttpServlet {

    private final CategoryService categoryService = new CategoryService();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        HttpSession session = request.getSession(false);

        // üîπ Ki·ªÉm tra session
        if (session == null || session.getAttribute("user_id") == null) {
            System.out.println("‚ö†Ô∏è Session ch∆∞a c√≥ user_id ‚Äî ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p!");
            // N·∫øu ch∆∞a login th√¨ kh√¥ng t·∫£i d·ªØ li·ªáu, ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o
            request.setAttribute("error", "B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. H√£y ƒëƒÉng nh·∫≠p ƒë·ªÉ xem danh m·ª•c c·ªßa b·∫°n!");
            request.setAttribute("view", "/views/categories.jsp");
            request.getRequestDispatcher("/layout/layout.jsp").forward(request, response);
            return;
        }

        UUID userId = (UUID) session.getAttribute("user_id");

        // ‚úÖ L·∫•y danh m·ª•c theo user
        List<Category> categories = categoryService.getCategoriesByUser(userId);
        request.setAttribute("categories", categories);

        String action = request.getParameter("action");
        if ("edit".equals(action)) {
            UUID id = UUID.fromString(request.getParameter("id"));
            Category editCategory = categoryService.getCategoryById(id);
            request.setAttribute("editCategory", editCategory);
        } else if ("delete".equals(action)) {
            UUID id = UUID.fromString(request.getParameter("id"));
            categoryService.deleteCategory(id);
            response.sendRedirect(request.getContextPath() + "/categories");
            return;
        }

        // Hi·ªÉn th·ªã trong layout
        request.setAttribute("view", "/views/categories.jsp");
        request.getRequestDispatcher("/layout/layout.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        HttpSession session = request.getSession(false);

        if (session == null || session.getAttribute("user_id") == null) {
            System.out.println("‚ö†Ô∏è Session ch∆∞a c√≥ user_id ‚Äî ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p!");
            request.setAttribute("error", "B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. H√£y ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m danh m·ª•c!");
            request.setAttribute("view", "/views/categories.jsp");
            request.getRequestDispatcher("/layout/layout.jsp").forward(request, response);
            return;
        }

        UUID userId = (UUID) session.getAttribute("user_id");
        User user = new User();
        user.setId(userId);

        // üîπ L·∫•y d·ªØ li·ªáu form
        String idParam = request.getParameter("id");
        String name = request.getParameter("name");
        String type = request.getParameter("type");
        String iconPath = request.getParameter("icon");
        String color = request.getParameter("color");
        String parentId = request.getParameter("parentId");

        Category category = new Category();
        category.setName(name);
        category.setType(type);
        category.setIconPath(iconPath);
        category.setColor(color);
        category.setUser(user);

        if (parentId != null && !parentId.isEmpty()) {
            Category parent = categoryService.getCategoryById(UUID.fromString(parentId));
            category.setParent(parent);
        }

        if (idParam == null || idParam.isEmpty()) {
            categoryService.saveCategory(category, user);
        } else {
            category.setId(UUID.fromString(idParam));
            categoryService.updateCategory(category);
        }

        response.sendRedirect(request.getContextPath() + "/categories");
    }
}
