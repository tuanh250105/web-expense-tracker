package com.expensemanager.listener;

import com.expensemanager.service.TransactionScheduler;
import com.expensemanager.util.JpaUtil;  // Th√™m import cho JPA shutdown
import jakarta.servlet.annotation.WebListener;
import org.quartz.*;
import org.quartz.impl.StdSchedulerFactory;

import jakarta.servlet.ServletContextEvent;
import jakarta.servlet.ServletContextListener;
@WebListener
public class AppContextListener implements ServletContextListener {

    private Scheduler scheduler;

    @Override
    public void contextInitialized(ServletContextEvent sce) {
        try {
            // Kh·ªüi t·∫°o Quartz Scheduler
            scheduler = StdSchedulerFactory.getDefaultScheduler();
            JobDetail job = JobBuilder.newJob(TransactionScheduler.class)
                    .withIdentity("scheduledTransactionJob", "Budget")
                    .build();

            // Trigger: H√†ng ng√†y l√∫c 00:05 (c√≥ th·ªÉ thay b·∫±ng CronExpression n·∫øu c·∫ßn ph·ª©c t·∫°p h∆°n)
            Trigger trigger = TriggerBuilder.newTrigger()
                    .withIdentity("dailyTrigger", "expenseManager")
                    .withSchedule(CronScheduleBuilder.dailyAtHourAndMinute(0, 5))
                    .build();

            scheduler.scheduleJob(job, trigger);
            scheduler.triggerJob(job.getKey()); // üî• Ch·∫°y ngay l·∫≠p t·ª©c khi kh·ªüi ƒë·ªông

            scheduler.start();
            System.out.println("‚úÖ AQuartz Scheduler kh·ªüi t·∫°o th√†nh c√¥ng cho TransactionScheduler!");


            // ‚öôÔ∏è Ch·∫°y th·ª≠ TransactionScheduler ngay khi server kh·ªüi ƒë·ªông
            try {
                com.expensemanager.service.TransactionScheduler testRun = new com.expensemanager.service.TransactionScheduler();
                testRun.execute(null);
                System.out.println("üöÄ ƒê√£ ch·∫°y th·ª≠ TransactionScheduler ngay khi kh·ªüi ƒë·ªông!");
            } catch (Exception ex) {
                ex.printStackTrace();
            }


        } catch (SchedulerException e) {
            System.err.println("‚ùå L·ªói kh·ªüi t·∫°o Quartz Scheduler: " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Override
    public void contextDestroyed(ServletContextEvent sce) {
        try {
            // Shutdown Quartz Scheduler tr∆∞·ªõc
            if (scheduler != null) {
                scheduler.shutdown(true);  // true: ch·ªù jobs ho√†n th√†nh
                System.out.println("‚úÖ Quartz Scheduler ƒë√£ shutdown.");
            }

            // Shutdown JPA EntityManagerFactory (quan tr·ªçng ƒë·ªÉ ƒë√≥ng connection pool)
            JpaUtil.shutdown();
            System.out.println("‚úÖ JPA EntityManagerFactory ƒë√£ shutdown.");
        } catch (SchedulerException e) {
            System.err.println("‚ùå L·ªói shutdown Quartz: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {  // Catch cho JpaUtil n·∫øu c√≥ l·ªói
            System.err.println("‚ùå L·ªói shutdown JPA: " + e.getMessage());
            e.printStackTrace();
        }
    }
}